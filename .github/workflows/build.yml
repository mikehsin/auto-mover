name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Build Single File Version
      run: |
        $CSC_PATH = (Get-ChildItem -Path "${env:ProgramFiles(x86)}\Microsoft Visual Studio\*\*\MSBuild\*\Bin\Roslyn\csc.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1).FullName
        if (-not $CSC_PATH) {
          $CSC_PATH = (Get-ChildItem -Path "${env:ProgramFiles}\Microsoft Visual Studio\*\*\MSBuild\*\Bin\Roslyn\csc.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1).FullName
        }
        if (-not $CSC_PATH) {
          $CSC_PATH = (Get-ChildItem -Path "${env:WINDIR}\Microsoft.NET\Framework64\v*\csc.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -Last 1).FullName
        }
        if ($CSC_PATH) {
          & "$CSC_PATH" /target:winexe /out:MouseAutoMover.exe /reference:System.Windows.Forms.dll /reference:System.Drawing.dll MouseAutoMover_SingleFile.cs
        } else {
          Write-Host "C# compiler not found"
          exit 1
        }
      shell: powershell
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MouseAutoMover
        path: |
          MouseAutoMover.exe
          README.md
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Mouse Auto Mover ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./MouseAutoMover.exe
        asset_name: MouseAutoMover.exe
        asset_content_type: application/octet-stream
