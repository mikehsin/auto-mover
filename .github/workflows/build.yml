name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        dotnet-quality: 'ga'
    
    - name: Install Windows Desktop Workload
      run: dotnet workload install windowsdesktop
    
    - name: List available workloads
      run: dotnet workload list --machine-readable
      continue-on-error: true
    
    - name: Restore dependencies
      run: dotnet restore
      continue-on-error: true
    
    - name: Build with dotnet (main approach)
      run: dotnet build --configuration Release --no-restore
      continue-on-error: true
    
    - name: Build Single File Version (fallback)
      run: |
        Write-Host "Building using dotnet publish..."
        
        # Clean up any existing executable
        if (Test-Path "MouseAutoMover.exe") {
          Remove-Item "MouseAutoMover.exe" -Force
          Write-Host "Removed existing executable"
        }
        
        # Use dotnet publish which should work reliably
        dotnet publish -c Release -o . --self-contained false
        
        # Check if we got an executable
        if (Test-Path "MouseAutoMover.exe") {
          Write-Host "✅ Build successful with dotnet publish"
        } else {
          Write-Host "❌ Build failed - checking for other output files"
          Get-ChildItem -Name "*.exe" | ForEach-Object { Write-Host "Found: $_" }
          
          # Try to find the executable in bin folder
          $binExe = Get-ChildItem -Path "bin" -Name "*.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
          if ($binExe) {
            $fullPath = Get-ChildItem -Path "bin" -Filter "*.exe" -Recurse | Select-Object -First 1
            Copy-Item $fullPath.FullName "MouseAutoMover.exe"
            Write-Host "✅ Copied executable from bin folder"
          } else {
            Write-Host "❌ No executable found anywhere"
            exit 1
          }
        }
      shell: powershell
    
    - name: Verify Build Output
      run: |
        if (Test-Path "MouseAutoMover.exe") {
          Write-Host "✅ MouseAutoMover.exe created successfully"
          Get-Item "MouseAutoMover.exe" | Format-Table Name, Length, LastWriteTime
        } else {
          Write-Host "❌ MouseAutoMover.exe not found"
          Write-Host "Files in current directory:"
          Get-ChildItem | Format-Table Name, Length
          exit 1
        }
      shell: powershell
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MouseAutoMover
        path: |
          MouseAutoMover.exe
          README.md
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          MouseAutoMover.exe
          README.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
