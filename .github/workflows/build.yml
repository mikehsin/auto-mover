name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Build Single File Version
      run: |
        # Try to find C# compiler
        $compilerPaths = @(
          "${env:ProgramFiles}\dotnet\sdk\*\Roslyn\bincore\csc.dll",
          "${env:ProgramFiles(x86)}\Microsoft Visual Studio\*\*\MSBuild\*\Bin\Roslyn\csc.exe",
          "${env:ProgramFiles}\Microsoft Visual Studio\*\*\MSBuild\*\Bin\Roslyn\csc.exe",
          "${env:WINDIR}\Microsoft.NET\Framework64\v*\csc.exe"
        )
        
        $cscPath = $null
        foreach ($pattern in $compilerPaths) {
          $found = Get-ChildItem -Path $pattern -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
          if ($found) {
            $cscPath = $found.FullName
            break
          }
        }
        
        if ($cscPath -and $cscPath.EndsWith('.dll')) {
          # Use dotnet to run csc.dll
          dotnet "$cscPath" /target:winexe /out:MouseAutoMover.exe /reference:"${env:ProgramFiles}\dotnet\shared\Microsoft.WindowsDesktop.App\*\System.Windows.Forms.dll" /reference:"${env:ProgramFiles}\dotnet\shared\Microsoft.WindowsDesktop.App\*\System.Drawing.dll" MouseAutoMover_SingleFile.cs
        } elseif ($cscPath) {
          # Use csc.exe directly
          & "$cscPath" /target:winexe /out:MouseAutoMover.exe /reference:System.Windows.Forms.dll /reference:System.Drawing.dll MouseAutoMover_SingleFile.cs
        } else {
          Write-Host "Using dotnet publish as fallback"
          dotnet publish -c Release -o . --self-contained false
          if (Test-Path "MouseAutoMover.exe") {
            Write-Host "Build successful with dotnet publish"
          } else {
            Write-Host "Build failed - no executable generated"
            exit 1
          }
        }
      shell: powershell
    
    - name: Verify Build Output
      run: |
        if (Test-Path "MouseAutoMover.exe") {
          Write-Host "✅ MouseAutoMover.exe created successfully"
          Get-Item "MouseAutoMover.exe" | Format-Table Name, Length, LastWriteTime
        } else {
          Write-Host "❌ MouseAutoMover.exe not found"
          Write-Host "Files in current directory:"
          Get-ChildItem | Format-Table Name, Length
          exit 1
        }
      shell: powershell
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MouseAutoMover
        path: |
          MouseAutoMover.exe
          README.md
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          MouseAutoMover.exe
          README.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
